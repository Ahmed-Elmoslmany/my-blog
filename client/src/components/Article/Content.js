import Markdown from "markdown-to-jsx";
import Code from "./Code";

// const md = "# Useful JavaScript Code Snippets\n## Sort array\n- mofdk\n- Sort <span className='highlighted-text'>an</span> Array\n<Code language='js'>\n//strings\nconst names = ['Seema', 'Rekha', 'Jaya'];\nnames.sort() //['Jaya', 'Rekha', 'Seema' ]\n//Numbers\nconst numbers = [101, 8, 87];\nnumbers.sort((a, b) => {\n  return a - b;\n});\n//[ 8, 87, 101 ]\n</Code>\n<div className='important-note'>\nعشان تعمل الـ <span className='highlighted-text'>Sort</span> انت محتاج\n</div>\n2. Select a random element\n<Code language='javascript'>\nconst items = ['Ball', 'Bat', 'Cup']\nconst randomIndex = Math.floor(Math.random()*items.length)\nitems[randomIndex]\n</Code>\n3. Reverse a string\n<Code language='javascript'>\nfunction reverseString(string) {\n  return string.split(' ').reverse().join(' ')\n}\nrevereseString('Random String')\n</Code>\n4. Check if element has a class\n<Code language='javascript'>\nconst element = document.querySelector('#element')\nelement.classList.contains('active')\n</Code>\n5. String interpolation\n<Code language='javascript'>\nconst name = 'Jaya'\nconsole.log(<span className='highlighted-text'>Hi, ${name}. You have ${2 ** 3} new notifications.</span>}\n//Hi, Jaya. You have 8 new notifications.\n</Code>\n6. Loop through an array\n<Code language='javascript'>\nconst cars = ['Ford', 'BMW', 'Audi' ]\nfor (let car of cars) {\n  console.log(car)\n}\n/*\nFord\nBMW\nAudi\n*/\n</Code>\n7. Get current time\n<Code language='javascript'>\nconst date = new Date()\nconst currentTime = \n  <span className='highlighted-text'>${date.getHours()}:${date.getMintues()}:${date.getSeconds()}</span>\nconsole.log(currentTimes)\n//example output: '22:16:41'\n</Code>\n8. Replace part of a string\n<Code language='javascript'>\nconst string = 'You are awesome.'\nconst replacedString = string.replace('You', 'We')\nconsole.log(replacedString) //Output: 'We are awesome'\n</Code>\n9. Destructing variable assignment\n<Code language='javascript'>\nlet profile = ['bob', 34, 'carpenter'];\nlet [name, age, job] = profile;\nconsole.log(name);\n// bob\n</Code>\n10. Using the spread operator\n<Code language='javascript'>\nlet data = [1,2,3,4,5];\nconsole.log(...data);\n//  1 2 3 4 5\nlet data2 = [6,7,8,9,10];\nlet combined = [...data, ...data2];\nconsole.log(...combined);\n// 1 2 3 4 5 6 7 8 9 10\nconsole.log(Math.max(...combined));\n// 10\n</Code>"
// const md = "# أقتباسات لأكواد جافا سكريبت\n## ترتيب المصفوفة\nاولاً نقوم بأنشاء المصفوصة\nثانياً نستخدم الدالة <span className='highlighted-text'>sort</span> التي تقوم بترتيب العناصر بالأبجدية\n<Code language='js'>\n//الكلمات\nconst names = ['Ahmed', 'Samy', 'Elmoslmany'];\nnames.sort() //['Ahmed', 'Elmoslmany', 'Samy' ]\n//الأرقام\nconst numbers = [101, 8, 87];\nnumbers.sort((a, b) => {\n  return a - b;\n});\n//[ 8, 87, 101 ]\n</Code>\n<div className='important-note'>\nعشان تعمل الـ <span className='highlighted-text'>Sort</span> انت محتاج\n</div>\n2. أختيار عنصر عشوائي\n<Code language='javascript'>\nconst items = ['Ball', 'Bat', 'Cup']\nconst randomIndex = Math.floor(Math.random()*items.length)\nitems[randomIndex]\n</Code>\n3. تغير أتجاه الكلمة\n<Code language='javascript'>\nfunction reverseString(string) {\n  return string.split(' ').reverse().join(' ')\n}\nrevereseString('Random String')\n</Code>\n4. Check if element has a class\n<Code language='javascript'>\nconst element = document.querySelector('#element')\nelement.classList.contains('active')\n</Code>\n5. String interpolation\n<Code language='javascript'>\nconst name = 'Jaya'\nconsole.log(<span className='highlighted-text'>Hi, ${name}. You have ${2 ** 3} new notifications.</span>}\n//Hi, Jaya. You have 8 new notifications.\n</Code>\n6. Loop through an array\n<Code language='javascript'>\nconst cars = ['Ford', 'BMW', 'Audi' ]\nfor (let car of cars) {\n  console.log(car)\n}\n/*\nFord\nBMW\nAudi\n*/\n</Code>\n7. Get current time\n<Code language='javascript'>\nconst date = new Date()\nconst currentTime = \n  <span className='highlighted-text'>${date.getHours()}:${date.getMintues()}:${date.getSeconds()}</span>\nconsole.log(currentTimes)\n//example output: '22:16:41'\n</Code>\n8. Replace part of a string\n<Code language='javascript'>\nconst string = 'You are awesome.'\nconst replacedString = string.replace('You', 'We')\nconsole.log(replacedString) //Output: 'We are awesome'\n</Code>\n9. Destructing variable assignment\n<Code language='javascript'>\nlet profile = ['bob', 34, 'carpenter'];\nlet [name, age, job] = profile;\nconsole.log(name);\n// bob\n</Code>\n10. Using the spread operator\n<Code language='javascript'>\nlet data = [1,2,3,4,5];\nconsole.log(...data);\n//  1 2 3 4 5\nlet data2 = [6,7,8,9,10];\nlet combined = [...data, ...data2];\nconsole.log(...combined);\n// 1 2 3 4 5 6 7 8 9 10\nconsole.log(Math.max(...combined));\n// 10\n</Code>"
// const md = "# ماهو الـ Middleware؟\nمفهوم من أهم المفاهيم في أغلب لغات البرمجة مع اختلاف المسمى هو الـ Middleware\n## حسناً ماذا يعني الـ Middleware؟\nتخيل معي هذا المثال: أحمد دخل اختبار تابع لأحد الدورات الأونلاين على Google forms، جاوب أحمد على الأسئلة وقام بأرسال اجاباته  ثم ظهرت له نتيجة الأختبار،\nهل لاحظت شيئًا؟، تلك الفترة القصيرة جدا ما بين ارسال أحمد لإجاباته وظهور النتيجة، هل تمت على الفور؟! في الحقيقة **لا** بل كان هناك بعض الاجراءات قبل ارسال النتيجة لأحمد، مثل التحقق من إدخال أحمد للـ Gmail الخاص به وهكذا   \nيُمكن تلخيص المثال السابق بأن الـ Middleware هو عبارة عن وسيط يتحقق من بعض الأشياء بعد إرسال المستخدم لبيانات معينة وقبل  الرد على المستخدم بناءً على تلك البيانات.\nما سبق كان شرح بسيط للمفهوم العام .. ومن وجهة نظر اخرى فإن الـ Middleware عبارة عن الكود الذي يُنفذ بين إرسال الطلب <span className='highlighted-text'>Request</span> وتلقي الرد <span className='highlighted-text'>Resonse</span>  وهذا هو التعريف المشهور في عالم الـ <span className='highlighted-text'>Backend</span> وهو موضوعنا اليوم.\n## مثال أكثر تفصيلاً\nعندما تقوم بشراء شئ ما اونلاين، هل يتم تنفيذ طلبك على الفور؟ كلا بل يتم التحقق من بعض الأمور الهامة مثل:\n-هل قُمت بتسجيل الدخول على الموقع؟\n-هل قُمت بإدخال معلومات مهمة مثل عنوانك ورقم هاتفك للتواصل معك عند توصيل طلبك\n-وأشياء اخرى كثيرة\n كل هذه الأشياء يمكن التحقق منها بإستخدام الـ Middlware، والكود التالي يوضح الأمر\n <span className='highlighted-text'>`</span>js\nconst preChecksBeforeOrdering = (req, res, next) => {\n // نتحقق هنا هل المتسخدم سجل الدخول أم لا\n     if(!isLoggedIn(req.body.id)) {\n         return next(new Error('رجاءً قُم بتسجيل الدخول قبل طلب المُنتج'))\n        }\n     .\n     .\n     .\n      // بقية كود التحقق قبل تنفيذ الطلب\n    next()\n}<span className='highlighted-text'>`</span>\nيُمكنك بالطبع كتابة أكثر من Middleware، وهذه الرسمة البسيطة توضح الأمر\n<span className='highlighted-text'>`</span>bash\nالرد <-- Middleware <-- Middleware <-- Middleware <-- الطلب\n<span className='highlighted-text'>`</span>\n## أنواع الـ Middleware وأستخدامته\nأنواع الـ Middleware كثيرة فمنها ماهو جاهز كـ Package، ويُمكنك بالطبع كتابة الـ Middlware الخاص بك كما فعلنا في المثال السابق.\nأستخدامات الـ Middleware مُتعددة منها مثلاً\n- يُمكنك أستخدامها في عملية المُصادقة <span className='highlighted-text'>Authentication</span>\n- يُمكنك أيضًا أستخدامها في التحقق من صحة البيانات <span className='highlighted-text'>Validation</span>\n- وأشياء اخرى كثيرة، لعلنا نُفصل في هذه المواضيع قريبًا."
const Content = ({ content }) => {
  return (
    <article className="article">
      <div className="container">
        <div className="post-wrapper">
          <Markdown
            options={{
              overrides: {
                Code: {
                  component: Code,
                },
              },
            }}
          >
            {content}
          </Markdown>
        </div>
      </div>
    </article>
  );
};

export default Content;
